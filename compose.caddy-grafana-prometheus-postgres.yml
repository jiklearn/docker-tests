name: apigw
services:
  caddy:
    image: caddy:2.9.1-builder-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./site:/srv
      - caddy_data:/data
      - caddy_config:/config
  postgres:
    image: postgres:14.17
    environment:
      POSTGRES_DB: testdb
      POSTGRES_PASSWORD: test123
      POSTGRES_NON_ROOT_USER: test
      POSTGRES_NON_ROOT_USER_PASSWORD: test123
    volumes:
      - postgres_data:/var/lib/postgresql/data
  prometheus:
    image: prom/prometheus:v3.2.1
    # container_name: prometheus024701
    # ports:
    #   - 9090:9090
    restart: unless-stopped
    volumes:
      - promethues_config:/etc/prometheus
      - promethues_data:/prometheus
  grafana:
    image: grafana/grafana:11.5.2
    restart: unless-stopped
    # ports:
    #  - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
  # app:
  # image: myapp:1
  #   depends_on:
  #       - postgres
  #   environment:
  #     INSTANCE_NAME: ${INSTANCE_NAME}
  #     DB_HOST: db
  #     DB_NAME: ${POSTGRES_DB}
  #     DB_USER: ${POSTGRES_USER}
  #     DB_PASSWORD: ${POSTGRES_PASSWORD}
  #   links:
  #     - db:db
  #   volumes:
  #     - ${STORAGE_PATH}/${INSTANCE_NAME}/data:/srv/web/data
  #   ports:
  #     - "${INSTANCE_PORT}:8080"
  #   labels: # labels in Compose file instead of Dockerfile
  #     - "instance-name": ${INSTANCE_NAME}


volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  grafana_data:
  promethues_data:   
  promethues_config:   
